#Hurdle 1
def turn_right():
    turn_left()
    turn_left()
    turn_left()

def jump_hurdle():
    move()
    turn_left()
    move()
    turn_right()
    move()
    turn_right()
    move()
    turn_left()

for i in range(6):
    jump_hurdle()


#Hurdle 2
def turn_right():
    turn_left()
    turn_left()
    turn_left()

def jump_hurdle():
    move()
    turn_left()
    move()
    turn_right()
    move()
    turn_right()
    move()
    turn_left()
HURDLE 1 dan 2 yang mengerjakan Irsyat

#HURDLE 3
def turn_right():
    turn_left()
    turn_left()
    turn_left()

def jump_hurdle():
    turn_left()
    while wall_on_right():
        move()
    turn_right()
    move()
    turn_right()
    while front_is_clear():
        move()
    turn_left()

# Loop sampai mencapai garis finis
while not at_goal():
    if front_is_clear():
        move()
    else:
        jump_hurdle()

#HURDLE 4
def turn_right():
    turn_left()
    turn_left()
    turn_left()

def jump_hurdle():
    turn_left()
    while wall_on_right():
        move()
    turn_right()
    move()
    turn_right()
    while front_is_clear():
        move()
    turn_left()

# Loop sampai mencapai garis finis
while not at_goal():
    if front_is_clear():
        move()
    else:
        jump_hurdle()
HURDLE 3 dan 4 yang mengerjakan Andhika

#MAZE
def turn_right():
    turn_left()
    turn_left()
    turn_left()
    
while front_is_clear():  #perulangan while ini adalah menggerakkan reeborg untuk berpindah ke tembok terdekat agar dia tidak terjebak dalam lingkaran tak terhingga dimana sisi kanannya bersih ke 4 arah (Ini terjadi ketika dia berada di tengah labirin )
    move()
turn_left()
    
while not at_goal():
    if right_is_clear():
        turn_right()
        move()
    elif front_is_clear():
        move()
    else:
        turn_left()
MAZE yang mengerjakan Pratama
